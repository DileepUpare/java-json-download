{
    "statementexample": {
        "prefix": "statementexample",
        "body": [
            "import java.sql.*;",
            "",
            "public class StudentDatabase {",
            "    public static void main(String[] args) {",
            "        try (Connection conn = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/college\", \"root\", \"password\");",
            "             Statement stmt = conn.createStatement()) {",
            "",
            "            // Create table",
            "            String createTable = \"CREATE TABLE IF NOT EXISTS student (\" +",
            "                                 \"USN VARCHAR(10) PRIMARY KEY, \" +",
            "                                 \"FN VARCHAR(50), LN VARCHAR(50), \" +",
            "                                 \"email VARCHAR(50), Phone VARCHAR(15), \" +",
            "                                 \"City VARCHAR(50), State VARCHAR(50), Pincode VARCHAR(10))\";",
            "            stmt.executeUpdate(createTable);",
            "",
            "            // Insert records",
            "            String insertQuery = \"INSERT INTO student VALUES \" +",
            "                                 \"('1', 'John', 'Doe', 'john@example.com', '1234567890', 'CityA', 'StateA', '111111'), \" +",
            "                                 \"('2', 'Jane', 'Smith', 'jane@example.com', '2345678901', 'CityB', 'StateB', '222222')\";",
            "            try {",
            "                stmt.executeUpdate(insertQuery);",
            "            } catch (SQLException e) {",
            "                System.out.println(\"Insert Error: \" + e.getMessage());",
            "            }",
            "",
            "            // Retrieve a student by USN",
            "            String usn = \"1\"; // Replace with input logic",
            "            ResultSet rs = stmt.executeQuery(\"SELECT * FROM student WHERE USN='\" + usn + \"'\");",
            "            if (rs.next()) {",
            "                System.out.println(\"USN: \" + rs.getString(\"USN\") + \", Name: \" + rs.getString(\"FN\") + \" \" + rs.getString(\"LN\"));",
            "            } else {",
            "                System.out.println(\"Student with USN \" + usn + \" not found.\");",
            "            }",
            "",
            "        } catch (SQLException e) {",
            "            e.printStackTrace();",
            "        }",
            "    }",
            "}"
        ],
        "description": "A Statement example for managing a student database."
    },
    "preparedStatementExample": {
        "prefix": "prepstmtexample",
        "body": [
            "import java.sql.*;",
            "",
            "public class EmployeeDatabase {",
            "    public static void main(String[] args) {",
            "        try (Connection conn = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/office\", \"root\", \"password\")) {",
            "            String createDeptTable = \"CREATE TABLE IF NOT EXISTS Department (DeptId INT PRIMARY KEY, DeptName VARCHAR(50))\";",
            "            try (PreparedStatement ps = conn.prepareStatement(createDeptTable)) {",
            "                ps.executeUpdate();",
            "            }",
            "",
            "            String createEmpTable = \"CREATE TABLE IF NOT EXISTS Employee (EmpId INT PRIMARY KEY, FN VARCHAR(50), LN VARCHAR(50), email VARCHAR(50), Phone VARCHAR(15), City VARCHAR(50), State VARCHAR(50), Pincode VARCHAR(10), DeptId INT, FOREIGN KEY (DeptId) REFERENCES Department(DeptId))\";",
            "            try (PreparedStatement ps = conn.prepareStatement(createEmpTable)) {",
            "                ps.executeUpdate();",
            "            }",
            "",
            "            String insertDept = \"INSERT INTO Department VALUES (?, ?)\";",
            "            try (PreparedStatement ps = conn.prepareStatement(insertDept)) {",
            "                ps.setInt(1, 1);",
            "                ps.setString(2, \"HR\");",
            "                ps.addBatch();",
            "                ps.setInt(1, 2);",
            "                ps.setString(2, \"IT\");",
            "                ps.addBatch();",
            "                ps.executeBatch();",
            "            } catch (SQLException e) {",
            "                System.out.println(\"Department Insert Error: \" + e.getMessage());",
            "            }",
            "",
            "            String insertEmp = \"INSERT INTO Employee VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)\";",
            "            try (PreparedStatement ps = conn.prepareStatement(insertEmp)) {",
            "                ps.setInt(1, 101);",
            "                ps.setString(2, \"Alice\");",
            "                ps.setString(3, \"Smith\");",
            "                ps.setString(4, \"alice@example.com\");",
            "                ps.setString(5, \"1234567890\");",
            "                ps.setString(6, \"CityX\");",
            "                ps.setString(7, \"StateX\");",
            "                ps.setString(8, \"123123\");",
            "                ps.setInt(9, 1);",
            "                ps.addBatch();",
            "                ps.setInt(1, 102);",
            "                ps.setString(2, \"Bob\");",
            "                ps.setString(3, \"Brown\");",
            "                ps.setString(4, \"bob@example.com\");",
            "                ps.setString(5, \"9876543210\");",
            "                ps.setString(6, \"CityY\");",
            "                ps.setString(7, \"StateY\");",
            "                ps.setString(8, \"456456\");",
            "                ps.setInt(9, 2);",
            "                ps.addBatch();",
            "                ps.executeBatch();",
            "            } catch (SQLException e) {",
            "                System.out.println(\"Employee Insert Error: \" + e.getMessage());",
            "            }",
            "        } catch (SQLException e) {",
            "            e.printStackTrace();",
            "        }",
            "    }",
            "}"
        ],
        "description": "A PreparedStatement example for managing employee and department tables."
    },
    "ScrollableresultExample": {
        "prefix": "scrollableresultexample",
        "body": [
            "import java.sql.*;",
            "",
            "public class LibraryManagement {",
            "    public static void main(String[] args) {",
            "        try (Connection conn = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/library\", \"root\", \"password\")) {",
            "",
            "            // Create Books table",
            "            String createTable = \"CREATE TABLE IF NOT EXISTS Books (\" +",
            "                                 \"Book_ID INT PRIMARY KEY, \" +",
            "                                 \"Title VARCHAR(100), \" +",
            "                                 \"Author VARCHAR(50), \" +",
            "                                 \"Genre VARCHAR(50), \" +",
            "                                 \"Publisher VARCHAR(50), \" +",
            "                                 \"Year INT, \" +",
            "                                 \"ISBN VARCHAR(13) UNIQUE)\";",
            "            try (PreparedStatement ps = conn.prepareStatement(createTable)) {",
            "                ps.executeUpdate();",
            "            }",
            "",
            "            // Insert records",
            "            String insertQuery = \"INSERT INTO Books VALUES (?, ?, ?, ?, ?, ?, ?)\";",
            "            try (PreparedStatement ps = conn.prepareStatement(insertQuery)) {",
            "                ps.setInt(1, 1);",
            "                ps.setString(2, \"Book A\");",
            "                ps.setString(3, \"Author A\");",
            "                ps.setString(4, \"Fiction\");",
            "                ps.setString(5, \"Publisher A\");",
            "                ps.setInt(6, 2020);",
            "                ps.setString(7, \"1234567890123\");",
            "                ps.addBatch();",
            "",
            "                ps.setInt(1, 2);",
            "                ps.setString(2, \"Book B\");",
            "                ps.setString(3, \"Author B\");",
            "                ps.setString(4, \"Science\");",
            "                ps.setString(5, \"Publisher B\");",
            "                ps.setInt(6, 2019);",
            "                ps.setString(7, \"9876543210987\");",
            "                ps.addBatch();",
            "",
            "                ps.executeBatch();",
            "            } catch (SQLException e) {",
            "                System.out.println(\"Insert Error: \" + e.getMessage());",
            "            }",
            "",
            "            // Retrieve book details by Book_ID or Title",
            "            String query = \"SELECT * FROM Books WHERE Book_ID = ? OR Title = ?\";",
            "            try (PreparedStatement ps = conn.prepareStatement(query, ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY)) {",
            "                ps.setInt(1, 1); // Replace with user input",
            "                ps.setString(2, \"Book A\"); // Replace with user input",
            "                ResultSet rs = ps.executeQuery();",
            "",
            "                if (!rs.isBeforeFirst()) {",
            "                    System.out.println(\"No books found.\");",
            "                } else {",
            "                    System.out.println(\"Navigating records:\");",
            "                    while (rs.next()) {",
            "                        System.out.println(\"Book_ID: \" + rs.getInt(\"Book_ID\") + \", Title: \" + rs.getString(\"Title\") +",
            "                                           \", Author: \" + rs.getString(\"Author\"));",
            "                    }",
            "                    if (rs.previous()) {",
            "                        System.out.println(\"Going backward: Book_ID: \" + rs.getInt(\"Book_ID\") + \", Title: \" + rs.getString(\"Title\"));",
            "                    }",
            "                }",
            "            }",
            "",
            "            // Optional: List books by genre, sorted by year",
            "            String genreQuery = \"SELECT * FROM Books WHERE Genre = ? ORDER BY Year\";",
            "            try (PreparedStatement ps = conn.prepareStatement(genreQuery)) {",
            "                ps.setString(1, \"Fiction\"); // Replace with user input",
            "                ResultSet rs = ps.executeQuery();",
            "",
            "                System.out.println(\"Books in Fiction genre:\");",
            "                while (rs.next()) {",
            "                    System.out.println(\"Title: \" + rs.getString(\"Title\") + \", Year: \" + rs.getInt(\"Year\"));",
            "                }",
            "            }",
            "",
            "        } catch (SQLException e) {",
            "            e.printStackTrace();",
            "        }",
            "    }",
            "}"
        ],
        "description": "A scrollable ResultSet example for managing a library database."
    },
    "ServletDynamicPage": {
        "prefix": "servletdynamicpage",
        "body": [
            "<!DOCTYPE html>",
            "<html>",
            "<head>",
            "    <title>Student Details</title>",
            "</head>",
            "<body>",
            "    <h2>Enter Student Details</h2>",
            "    <form action=\"StudentServlet\" method=\"post\">",
            "        <label for=\"name\">Name:</label>",
            "        <input type=\"text\" id=\"name\" name=\"name\" required><br><br>",
            "        <label for=\"usn\">USN:</label>",
            "        <input type=\"text\" id=\"usn\" name=\"usn\" required><br><br>",
            "        <button type=\"submit\">Submit</button>",
            "    </form>",
            "</body>",
            "</html>",
            "",
            "// StudentServlet.java",
            "import java.io.*;",
            "import javax.servlet.*;",
            "import javax.servlet.http.*;",
            "",
            "public class StudentServlet extends HttpServlet {",
            "    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {",
            "        // Set response content type",
            "        response.setContentType(\"text/html\");",
            "",
            "        // Read request parameters",
            "        String name = request.getParameter(\"name\");",
            "        String usn = request.getParameter(\"usn\");",
            "",
            "        // Generate response",
            "        PrintWriter out = response.getWriter();",
            "        out.println(\"<html><body>\");",
            "        out.println(\"<h2>Student Details Submitted</h2>\");",
            "        out.println(\"<p><strong>Name:</strong> \" + name + \"</p>\");",
            "        out.println(\"<p><strong>USN:</strong> \" + usn + \"</p>\");",
            "        out.println(\"</body></html>\");",
            "        out.close();",
            "    }",
            "}",
            "",
            "// web.xml Deployment Descriptor",
            "<web-app xmlns=\"http://java.sun.com/xml/ns/javaee\" version=\"3.0\">",
            "    <servlet>",
            "        <servlet-name>StudentServlet</servlet-name>",
            "        <servlet-class>StudentServlet</servlet-class>",
            "    </servlet>",
            "    <servlet-mapping>",
            "        <servlet-name>StudentServlet</servlet-name>",
            "        <url-pattern>/StudentServlet</url-pattern>",
            "    </servlet-mapping>",
            "</web-app>"
        ],
        "description": "Servlet example for dynamic page rendering with HTML form and StudentServlet."
    },
    "ServletCalculator": {
        "prefix": "servletcalculator",
        "body": [
            "<!DOCTYPE html>",
            "<html>",
            "<head>",
            "    <title>Calculator</title>",
            "</head>",
            "<body>",
            "    <h2>Simple Calculator</h2>",
            "    <form action=\"CalculatorServlet\" method=\"post\">",
            "        <label for=\"num1\">Enter first number:</label>",
            "        <input type=\"text\" id=\"num1\" name=\"num1\" required><br><br>",
            "        <label for=\"num2\">Enter second number:</label>",
            "        <input type=\"text\" id=\"num2\" name=\"num2\" required><br><br>",
            "        <label>Select Operation:</label><br>",
            "        <input type=\"radio\" id=\"add\" name=\"operation\" value=\"Add\" required>",
            "        <label for=\"add\">Add</label><br>",
            "        <input type=\"radio\" id=\"subtract\" name=\"operation\" value=\"Subtract\">",
            "        <label for=\"subtract\">Subtract</label><br>",
            "        <input type=\"radio\" id=\"multiply\" name=\"operation\" value=\"Multiply\">",
            "        <label for=\"multiply\">Multiply</label><br>",
            "        <input type=\"radio\" id=\"divide\" name=\"operation\" value=\"Divide\">",
            "        <label for=\"divide\">Divide</label><br><br>",
            "        <button type=\"submit\">Calculate</button>",
            "    </form>",
            "</body>",
            "</html>",
            "",
            "// CalculatorServlet.java",
            "import java.io.*;",
            "import javax.servlet.*;",
            "import javax.servlet.http.*;",
            "",
            "public class CalculatorServlet extends HttpServlet {",
            "    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {",
            "        // Set response content type",
            "        response.setContentType(\"text/html\");",
            "",
            "        PrintWriter out = response.getWriter();",
            "        try {",
            "            // Read input values",
            "            String num1Str = request.getParameter(\"num1\");",
            "            String num2Str = request.getParameter(\"num2\");",
            "            String operation = request.getParameter(\"operation\");",
            "",
            "            // Validate inputs",
            "            if (num1Str == null || num2Str == null || operation == null ||",
            "                num1Str.isEmpty() || num2Str.isEmpty()) {",
            "                out.println(\"<html><body><h3>Error: Missing or invalid input!</h3></body></html>\");",
            "                return;",
            "            }",
            "",
            "            int num1 = Integer.parseInt(num1Str);",
            "            int num2 = Integer.parseInt(num2Str);",
            "            double result = 0;",
            "",
            "            // Perform the operation",
            "            switch (operation) {",
            "                case \"Add\":",
            "                    result = num1 + num2;",
            "                    break;",
            "                case \"Subtract\":",
            "                    result = num1 - num2;",
            "                    break;",
            "                case \"Multiply\":",
            "                    result = num1 * num2;",
            "                    break;",
            "                case \"Divide\":",
            "                    if (num2 == 0) {",
            "                        out.println(\"<html><body><h3>Error: Division by zero is not allowed!</h3></body></html>\");",
            "                        return;",
            "                    }",
            "                    result = (double) num1 / num2;",
            "                    break;",
            "                default:",
            "                    out.println(\"<html><body><h3>Error: Invalid operation selected!</h3></body></html>\");",
            "                    return;",
            "            }",
            "",
            "            // Display result",
            "            out.println(\"<html><body>\");",
            "            out.println(\"<h3>Calculation Result:</h3>\");",
            "            out.println(\"<p>First Number: \" + num1 + \"</p>\");",
            "            out.println(\"<p>Second Number: \" + num2 + \"</p>\");",
            "            out.println(\"<p>Operation: \" + operation + \"</p>\");",
            "            out.println(\"<p>Result: \" + result + \"</p>\");",
            "            out.println(\"</body></html>\");",
            "        } catch (NumberFormatException e) {",
            "            out.println(\"<html><body><h3>Error: Please enter valid numeric values!</h3></body></html>\");",
            "        } finally {",
            "            out.close();",
            "        }",
            "    }",
            "}",
            "",
            "// web.xml Deployment Descriptor",
            "<web-app xmlns=\"http://java.sun.com/xml/ns/javaee\" version=\"3.0\">",
            "    <servlet>",
            "        <servlet-name>CalculatorServlet</servlet-name>",
            "        <servlet-class>CalculatorServlet</servlet-class>",
            "    </servlet>",
            "    <servlet-mapping>",
            "        <servlet-name>CalculatorServlet</servlet-name>",
            "        <url-pattern>/CalculatorServlet</url-pattern>",
            "    </servlet-mapping>",
            "</web-app>"
        ],
        "description": "Servlet example for a simple calculator with HTML form and CalculatorServlet."
    },
    "ServletStudentRegistration": {
        "prefix": "servletstudentregistration",
        "body": [
            "<!DOCTYPE html>",
            "<html>",
            "<head>",
            "    <title>Student Registration</title>",
            "</head>",
            "<body>",
            "    <h2>Student Registration Form</h2>",
            "    <form action=\"StudentRegistrationServlet\" method=\"post\">",
            "        <label for=\"usn\">USN:</label>",
            "        <input type=\"text\" id=\"usn\" name=\"usn\" required><br><br>",
            "        <label for=\"fn\">First Name:</label>",
            "        <input type=\"text\" id=\"fn\" name=\"fn\" required><br><br>",
            "        <label for=\"ln\">Last Name:</label>",
            "        <input type=\"text\" id=\"ln\" name=\"ln\" required><br><br>",
            "        <label for=\"email\">Email:</label>",
            "        <input type=\"email\" id=\"email\" name=\"email\" required><br><br>",
            "        <label for=\"phone\">Phone:</label>",
            "        <input type=\"text\" id=\"phone\" name=\"phone\" required><br><br>",
            "        <label for=\"city\">City:</label>",
            "        <input type=\"text\" id=\"city\" name=\"city\" required><br><br>",
            "        <label for=\"state\">State:</label>",
            "        <input type=\"text\" id=\"state\" name=\"state\" required><br><br>",
            "        <label for=\"pincode\">Pincode:</label>",
            "        <input type=\"text\" id=\"pincode\" name=\"pincode\" required><br><br>",
            "        <button type=\"submit\">Register</button>",
            "    </form>",
            "</body>",
            "</html>",
            "",
            "// StudentRegistrationServlet.java",
            "import java.io.*;",
            "import java.sql.*;",
            "import javax.servlet.*;",
            "import javax.servlet.http.*;",
            "",
            "public class StudentRegistrationServlet extends HttpServlet {",
            "    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {",
            "        response.setContentType(\"text/html\");",
            "        PrintWriter out = response.getWriter();",
            "",
            "        String usn = request.getParameter(\"usn\");",
            "        String fn = request.getParameter(\"fn\");",
            "        String ln = request.getParameter(\"ln\");",
            "        String email = request.getParameter(\"email\");",
            "        String phone = request.getParameter(\"phone\");",
            "        String city = request.getParameter(\"city\");",
            "        String state = request.getParameter(\"state\");",
            "        String pincode = request.getParameter(\"pincode\");",
            "",
            "        if (usn == null || fn == null || ln == null || email == null || phone == null || city == null || state == null || pincode == null ||",
            "            usn.isEmpty() || fn.isEmpty() || ln.isEmpty() || email.isEmpty() || phone.isEmpty() || city.isEmpty() || state.isEmpty() || pincode.isEmpty()) {",
            "            out.println(\"<html><body><h3>Error: All fields are required!</h3></body></html>\");",
            "            return;",
            "        }",
            "",
            "        try (Connection conn = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/student_db\", \"root\", \"password\")) {",
            "            String insertQuery = \"INSERT INTO Student (USN, FN, LN, Email, Phone, City, State, Pincode) VALUES (?, ?, ?, ?, ?, ?, ?, ?)\";",
            "            try (PreparedStatement ps = conn.prepareStatement(insertQuery)) {",
            "                ps.setString(1, usn);",
            "                ps.setString(2, fn);",
            "                ps.setString(3, ln);",
            "                ps.setString(4, email);",
            "                ps.setString(5, phone);",
            "                ps.setString(6, city);",
            "                ps.setString(7, state);",
            "                ps.setString(8, pincode);",
            "",
            "                int rowsInserted = ps.executeUpdate();",
            "                if (rowsInserted > 0) {",
            "                    out.println(\"<html><body><h3>Student registered successfully!</h3></body></html>\");",
            "                } else {",
            "                    out.println(\"<html><body><h3>Error: Registration failed!</h3></body></html>\");",
            "                }",
            "            } catch (SQLIntegrityConstraintViolationException e) {",
            "                out.println(\"<html><body><h3>Error: Duplicate USN or invalid data!</h3></body></html>\");",
            "            }",
            "        } catch (SQLException e) {",
            "            e.printStackTrace();",
            "            out.println(\"<html><body><h3>Error: Database connection failed!</h3></body></html>\");",
            "        }",
            "    }",
            "}",
            "",
            "// web.xml Deployment Descriptor",
            "<web-app xmlns=\"http://java.sun.com/xml/ns/javaee\" version=\"3.0\">",
            "    <servlet>",
            "        <servlet-name>StudentRegistrationServlet</servlet-name>",
            "        <servlet-class>StudentRegistrationServlet</servlet-class>",
            "    </servlet>",
            "    <servlet-mapping>",
            "        <servlet-name>StudentRegistrationServlet</servlet-name>",
            "        <url-pattern>/StudentRegistrationServlet</url-pattern>",
            "    </servlet-mapping>",
            "</web-app>"
        ],
        "description": "Servlet example for student registration form with database integration."
    },
    "ServletCookieSession": {
        "prefix": "servletcookiesession",
        "body": [
            "<!DOCTYPE html>",
            "<html>",
            "<head>",
            "    <title>Session and Cookies Example</title>",
            "</head>",
            "<body>",
            "    <h2>Login Form</h2>",
            "    <form action=\"LoginServlet\" method=\"post\">",
            "        <label for=\"username\">Username:</label>",
            "        <input type=\"text\" id=\"username\" name=\"username\" required><br><br>",
            "        <label for=\"password\">Password:</label>",
            "        <input type=\"password\" id=\"password\" name=\"password\" required><br><br>",
            "        <button type=\"submit\">Login</button>",
            "    </form>",
            "</body>",
            "</html>",
            "",
            "// LoginServlet.java",
            "import java.io.*;",
            "import javax.servlet.*;",
            "import javax.servlet.http.*;",
            "",
            "public class LoginServlet extends HttpServlet {",
            "    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {",
            "        response.setContentType(\"text/html\");",
            "        PrintWriter out = response.getWriter();",
            "",
            "        String username = request.getParameter(\"username\");",
            "        String password = request.getParameter(\"password\");",
            "",
            "        if (username.equals(\"admin\") && password.equals(\"admin123\")) {",
            "            // Create a session",
            "            HttpSession session = request.getSession();",
            "            session.setAttribute(\"username\", username);",
            "",
            "            // Create a cookie",
            "            Cookie userCookie = new Cookie(\"username\", username);",
            "            userCookie.setMaxAge(60 * 60); // 1 hour",
            "            response.addCookie(userCookie);",
            "",
            "            out.println(\"<html><body><h3>Welcome, \" + username + \"!</h3>\");",
            "            out.println(\"<a href='ProfileServlet'>Go to Profile</a></body></html>\");",
            "        } else {",
            "            out.println(\"<html><body><h3>Invalid Username or Password!</h3>\");",
            "            out.println(\"<a href='index.html'>Try Again</a></body></html>\");",
            "        }",
            "    }",
            "}",
            "",
            "// ProfileServlet.java",
            "import java.io.*;",
            "import javax.servlet.*;",
            "import javax.servlet.http.*;",
            "",
            "public class ProfileServlet extends HttpServlet {",
            "    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {",
            "        response.setContentType(\"text/html\");",
            "        PrintWriter out = response.getWriter();",
            "",
            "        HttpSession session = request.getSession(false);",
            "        Cookie[] cookies = request.getCookies();",
            "",
            "        String username = (String) session.getAttribute(\"username\");",
            "",
            "        if (username == null) {",
            "            out.println(\"<html><body><h3>Please login first!</h3>\");",
            "            out.println(\"<a href='index.html'>Login</a></body></html>\");",
            "            return;",
            "        }",
            "",
            "        out.println(\"<html><body><h3>Welcome to your Profile, \" + username + \"!</h3>\");",
            "        if (cookies != null) {",
            "            for (Cookie cookie : cookies) {",
            "                if (cookie.getName().equals(\"username\")) {",
            "                    out.println(\"<p>Cookie Value: \" + cookie.getValue() + \"</p>\");",
            "                }",
            "            }",
            "        }",
            "        out.println(\"<a href='LogoutServlet'>Logout</a></body></html>\");",
            "    }",
            "}",
            "",
            "// LogoutServlet.java",
            "import java.io.*;",
            "import javax.servlet.*;",
            "import javax.servlet.http.*;",
            "",
            "public class LogoutServlet extends HttpServlet {",
            "    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {",
            "        response.setContentType(\"text/html\");",
            "        PrintWriter out = response.getWriter();",
            "",
            "        HttpSession session = request.getSession(false);",
            "        if (session != null) {",
            "            session.invalidate();",
            "        }",
            "",
            "        Cookie[] cookies = request.getCookies();",
            "        if (cookies != null) {",
            "            for (Cookie cookie : cookies) {",
            "                cookie.setMaxAge(0);",
            "                response.addCookie(cookie);",
            "            }",
            "        }",
            "",
            "        out.println(\"<html><body><h3>You have logged out successfully!</h3>\");",
            "        out.println(\"<a href='index.html'>Login Again</a></body></html>\");",
            "    }",
            "}",
            "",
            "// web.xml Deployment Descriptor",
            "<web-app xmlns=\"http://java.sun.com/xml/ns/javaee\" version=\"3.0\">",
            "    <servlet>",
            "        <servlet-name>LoginServlet</servlet-name>",
            "        <servlet-class>LoginServlet</servlet-class>",
            "    </servlet>",
            "    <servlet-mapping>",
            "        <servlet-name>LoginServlet</servlet-name>",
            "        <url-pattern>/LoginServlet</url-pattern>",
            "    </servlet-mapping>",
            "    <servlet>",
            "        <servlet-name>ProfileServlet</servlet-name>",
            "        <servlet-class>ProfileServlet</servlet-class>",
            "    </servlet>",
            "    <servlet-mapping>",
            "        <servlet-name>ProfileServlet</servlet-name>",
            "        <url-pattern>/ProfileServlet</url-pattern>",
            "    </servlet-mapping>",
            "    <servlet>",
            "        <servlet-name>LogoutServlet</servlet-name>",
            "        <servlet-class>LogoutServlet</servlet-class>",
            "    </servlet>",
            "    <servlet-mapping>",
            "        <servlet-name>LogoutServlet</servlet-name>",
            "        <url-pattern>/LogoutServlet</url-pattern>",
            "    </servlet-mapping>",
            "</web-app>"
        ],
        "description": "Servlet example demonstrating session management and cookies."
    },
    "sessionHiddenForm": {
        "prefix": "sessionhiddenform",
        "body": [
            "<!DOCTYPE html>",
            "<html>",
            "<head>",
            "    <title>Session Management with Hidden Form Fields</title>",
            "</head>",
            "<body>",
            "    <h2>Enter Your Name</h2>",
            "    <form action=\"FirstServlet\" method=\"post\">",
            "        <label for=\"userName\">User Name:</label>",
            "        <input type=\"text\" id=\"userName\" name=\"userName\" required><br><br>",
            "        <button type=\"submit\">Submit</button>",
            "    </form>",
            "</body>",
            "</html>",
            "",
            "// FirstServlet.java",
            "import java.io.*;",
            "import javax.servlet.*;",
            "import javax.servlet.http.*;",
            "",
            "public class FirstServlet extends HttpServlet {",
            "    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {",
            "        response.setContentType(\"text/html\");",
            "        PrintWriter out = response.getWriter();",
            "",
            "        // Read userName from the request",
            "        String userName = request.getParameter(\"userName\");",
            "",
            "        // Validate userName",
            "        if (userName == null || userName.isEmpty()) {",
            "            out.println(\"<html><body><h3>Error: User name is required!</h3></body></html>\");",
            "            return;",
            "        }",
            "",
            "        // Generate response with hidden field for second servlet",
            "        out.println(\"<html><body>\");",
            "        out.println(\"<h3>User Name: \" + userName + \"</h3>\");",
            "        out.println(\"<form action='SecondServlet' method='post'>\");",
            "        out.println(\"<input type='hidden' name='userName' value='\" + userName + \"' />\");",
            "        out.println(\"<button type='submit'>Submit to Second Servlet</button>\");",
            "        out.println(\"</form>\");",
            "        out.println(\"</body></html>\");",
            "    }",
            "}",
            "",
            "// SecondServlet.java",
            "import java.io.*;",
            "import javax.servlet.*;",
            "import javax.servlet.http.*;",
            "",
            "public class SecondServlet extends HttpServlet {",
            "    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {",
            "        response.setContentType(\"text/html\");",
            "        PrintWriter out = response.getWriter();",
            "",
            "        // Retrieve userName from hidden form field",
            "        String userName = request.getParameter(\"userName\");",
            "",
            "        // Generate response",
            "        out.println(\"<html><body>\");",
            "        if (userName != null && !userName.isEmpty()) {",
            "            out.println(\"<h3>Welcome back, \" + userName + \"!</h3>\");",
            "        } else {",
            "            out.println(\"<h3>Error: No user name found in hidden form field!</h3>\");",
            "        }",
            "        out.println(\"</body></html>\");",
            "    }",
            "}",
            "",
            "// web.xml Deployment Descriptor",
            "<web-app xmlns=\"http://java.sun.com/xml/ns/javaee\" version=\"3.0\">",
            "    <servlet>",
            "        <servlet-name>FirstServlet</servlet-name>",
            "        <servlet-class>FirstServlet</servlet-class>",
            "    </servlet>",
            "    <servlet-mapping>",
            "        <servlet-name>FirstServlet</servlet-name>",
            "        <url-pattern>/FirstServlet</url-pattern>",
            "    </servlet-mapping>",
            "    <servlet>",
            "        <servlet-name>SecondServlet</servlet-name>",
            "        <servlet-class>SecondServlet</servlet-class>",
            "    </servlet>",
            "    <servlet-mapping>",
            "        <servlet-name>SecondServlet</servlet-name>",
            "        <url-pattern>/SecondServlet</url-pattern>",
            "    </servlet-mapping>",
            "</web-app>"
        ],
        "description": "Servlet example demonstrating session management with hidden form fields."
    },
    "servletUrlRewriting": {
        "prefix": "servleturlrewriting",
        "body": [
            "<!DOCTYPE html>",
            "<html>",
            "<head>",
            "    <title>Session Management with URL Rewriting</title>",
            "</head>",
            "<body>",
            "    <h2>Enter Your Name</h2>",
            "    <form action=\"FirstServlet\" method=\"post\">",
            "        <label for=\"userName\">User Name:</label>",
            "        <input type=\"text\" id=\"userName\" name=\"userName\" required><br><br>",
            "        <button type=\"submit\">Submit</button>",
            "    </form>",
            "</body>",
            "</html>",
            "",
            "// FirstServlet.java",
            "import java.io.*;",
            "import javax.servlet.*;",
            "import javax.servlet.http.*;",
            "",
            "public class FirstServlet extends HttpServlet {",
            "    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {",
            "        response.setContentType(\"text/html\");",
            "        PrintWriter out = response.getWriter();",
            "",
            "        // Read userName from the request",
            "        String userName = request.getParameter(\"userName\");",
            "",
            "        // Validate userName",
            "        if (userName == null || userName.isEmpty()) {",
            "            out.println(\"<html><body><h3>Error: User name is required!</h3></body></html>\");",
            "            return;",
            "        }",
            "",
            "        // Generate response with URL to second servlet",
            "        String url = \"SecondServlet?userName=\" + userName;",
            "        out.println(\"<html><body>\");",
            "        out.println(\"<h3>User Name: \" + userName + \"</h3>\");",
            "        out.println(\"<a href='\" + url + \"'>Go to Second Servlet</a>\");",
            "        out.println(\"</body></html>\");",
            "    }",
            "}",
            "",
            "// SecondServlet.java",
            "import java.io.*;",
            "import javax.servlet.*;",
            "import javax.servlet.http.*;",
            "",
            "public class SecondServlet extends HttpServlet {",
            "    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {",
            "        response.setContentType(\"text/html\");",
            "        PrintWriter out = response.getWriter();",
            "",
            "        // Retrieve userName from URL query string",
            "        String userName = request.getParameter(\"userName\");",
            "",
            "        // Generate response",
            "        out.println(\"<html><body>\");",
            "        if (userName != null && !userName.isEmpty()) {",
            "            out.println(\"<h3>Welcome back, \" + userName + \"!</h3>\");",
            "        } else {",
            "            out.println(\"<h3>Error: No user name found in URL!</h3>\");",
            "        }",
            "        out.println(\"</body></html>\");",
            "    }",
            "}",
            "",
            "// web.xml Deployment Descriptor",
            "<web-app xmlns=\"http://java.sun.com/xml/ns/javaee\" version=\"3.0\">",
            "    <servlet>",
            "        <servlet-name>FirstServlet</servlet-name>",
            "        <servlet-class>FirstServlet</servlet-class>",
            "    </servlet>",
            "    <servlet-mapping>",
            "        <servlet-name>FirstServlet</servlet-name>",
            "        <url-pattern>/FirstServlet</url-pattern>",
            "    </servlet-mapping>",
            "    <servlet>",
            "        <servlet-name>SecondServlet</servlet-name>",
            "        <servlet-class>SecondServlet</servlet-class>",
            "    </servlet>",
            "    <servlet-mapping>",
            "        <servlet-name>SecondServlet</servlet-name>",
            "        <url-pattern>/SecondServlet</url-pattern>",
            "    </servlet-mapping>",
            "</web-app>"
        ],
        "description": "Servlet example demonstrating session management with URL rewriting."
    },
    "sessionManagement": {
        "prefix": "sessionmanagement",
        "body": [
            "<!DOCTYPE html>",
            "<html>",
            "<head>",
            "    <title>Session Management using HTTP Session</title>",
            "</head>",
            "<body>",
            "    <h2>Enter Your Name</h2>",
            "    <form action=\"FirstServlet\" method=\"post\">",
            "        <label for=\"userName\">User Name:</label>",
            "        <input type=\"text\" id=\"userName\" name=\"userName\" required><br><br>",
            "        <button type=\"submit\">Submit</button>",
            "    </form>",
            "</body>",
            "</html>",
            "",
            "// FirstServlet.java",
            "import java.io.*;",
            "import javax.servlet.*;",
            "import javax.servlet.http.*;",
            "",
            "public class FirstServlet extends HttpServlet {",
            "    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {",
            "        response.setContentType(\"text/html\");",
            "        PrintWriter out = response.getWriter();",
            "",
            "        // Read userName from the request",
            "        String userName = request.getParameter(\"userName\");",
            "",
            "        // Validate userName",
            "        if (userName == null || userName.isEmpty()) {",
            "            out.println(\"<html><body><h3>Error: User name is required!</h3></body></html>\");",
            "            return;",
            "        }",
            "",
            "        // Create a new session and store userName in the session",
            "        HttpSession session = request.getSession();",
            "        session.setAttribute(\"userName\", userName);",
            "",
            "        // Generate response with form for second servlet",
            "        out.println(\"<html><body>\");",
            "        out.println(\"<h3>User Name: \" + userName + \"</h3>\");",
            "        out.println(\"<form action='SecondServlet' method='post'>\");",
            "        out.println(\"<button type='submit'>Submit to Second Servlet</button>\");",
            "        out.println(\"</form>\");",
            "        out.println(\"</body></html>\");",
            "    }",
            "}",
            "",
            "// SecondServlet.java",
            "import java.io.*;",
            "import javax.servlet.*;",
            "import javax.servlet.http.*;",
            "",
            "public class SecondServlet extends HttpServlet {",
            "    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {",
            "        response.setContentType(\"text/html\");",
            "        PrintWriter out = response.getWriter();",
            "",
            "        // Retrieve the session object",
            "        HttpSession session = request.getSession(false); // Get session without creating a new one",
            "",
            "        if (session == null) {",
            "            out.println(\"<html><body><h3>Error: No session found!</h3></body></html>\");",
            "            return;",
            "        }",
            "",
            "        // Retrieve userName from session",
            "        String userName = (String) session.getAttribute(\"userName\");",
            "        if (userName == null) {",
            "            out.println(\"<html><body><h3>Error: No user name found in session!</h3></body></html>\");",
            "            return;",
            "        }",
            "",
            "        // Get session creation time and last access time",
            "        long creationTime = session.getCreationTime();",
            "        long lastAccessedTime = session.getLastAccessedTime();",
            "        String sessionCreationTime = new java.util.Date(creationTime).toString();",
            "        String sessionLastAccessedTime = new java.util.Date(lastAccessedTime).toString();",
            "",
            "        // Generate response",
            "        out.println(\"<html><body>\");",
            "        out.println(\"<h3>Welcome back, \" + userName + \"!</h3>\");",
            "        out.println(\"<p>Session Creation Time: \" + sessionCreationTime + \"</p>\");",
            "        out.println(\"<p>Session Last Accessed Time: \" + sessionLastAccessedTime + \"</p>\");",
            "        out.println(\"</body></html>\");",
            "    }",
            "}",
            "",
            "// web.xml Deployment Descriptor",
            "<web-app xmlns=\"http://java.sun.com/xml/ns/javaee\" version=\"3.0\">",
            "    <servlet>",
            "        <servlet-name>FirstServlet</servlet-name>",
            "        <servlet-class>FirstServlet</servlet-class>",
            "    </servlet>",
            "    <servlet-mapping>",
            "        <servlet-name>FirstServlet</servlet-name>",
            "        <url-pattern>/FirstServlet</url-pattern>",
            "    </servlet-mapping>",
            "    <servlet>",
            "        <servlet-name>SecondServlet</servlet-name>",
            "        <servlet-class>SecondServlet</servlet-class>",
            "    </servlet>",
            "    <servlet-mapping>",
            "        <servlet-name>SecondServlet</servlet-name>",
            "        <url-pattern>/SecondServlet</url-pattern>",
            "    </servlet-mapping>",
            "</web-app>"
        ],
        "description": "Servlet example demonstrating session management using HTTP session."
    },
    "JspAdditionExample": {
        "prefix": "jspadditionexample",
        "body": [
            "<%@ page language=\"java\" contentType=\"text/html; charset=ISO-8859-1\" pageEncoding=\"ISO-8859-1\"%>",
            "<!DOCTYPE html>",
            "<html>",
            "<head>",
            "    <title>Addition of Two Numbers</title>",
            "</head>",
            "<body>",
            "    <h2>Enter Two Numbers for Addition</h2>",
            "    <form action=\"\" method=\"post\">",
            "        <label for=\"num1\">First Number:</label>",
            "        <input type=\"number\" id=\"num1\" name=\"num1\" required><br><br>",
            "",
            "        <label for=\"num2\">Second Number:</label>",
            "        <input type=\"number\" id=\"num2\" name=\"num2\" required><br><br>",
            "",
            "        <button type=\"submit\">Add</button>",
            "    </form>",
            "",
            "    <% ",
            "        // Retrieve the numbers from the request parameters",
            "        String num1Str = request.getParameter(\"num1\");",
            "        String num2Str = request.getParameter(\"num2\");",
            "",
            "        // Check if both numbers are provided",
            "        if (num1Str != null && num2Str != null) {",
            "            try {",
            "                // Parse the numbers to integers",
            "                int num1 = Integer.parseInt(num1Str);",
            "                int num2 = Integer.parseInt(num2Str);",
            "",
            "                // Perform the addition",
            "                int sum = num1 + num2;",
            "",
            "                // Display the result",
            "                out.println(\"<h3>The sum of \" + num1 + \" and \" + num2 + \" is: \" + sum + \"</h3>\");",
            "            } catch (NumberFormatException e) {",
            "                out.println(\"<h3>Error: Invalid input. Please enter valid numbers.</h3>\");",
            "            }",
            "        }",
            "    %>",
            "</body>",
            "</html>"
        ],
        "description": "JSP example for adding two numbers with form submission and result display."
    },
    "jspExceptionHandling": {
        "prefix": "jspexceptionhandling",
        "body": [
            "<%@ page language=\"java\" contentType=\"text/html; charset=ISO-8859-1\" pageEncoding=\"ISO-8859-1\"%>",
            "<!DOCTYPE html>",
            "<html>",
            "<head>",
            "    <title>Exception Handling Using web.xml</title>",
            "</head>",
            "<body>",
            "    <h2>Enter a Number</h2>",
            "    <form action=\"index.jsp\" method=\"post\">",
            "        <label for=\"number\">Number:</label>",
            "        <input type=\"text\" id=\"number\" name=\"number\" required><br><br>",
            "        <button type=\"submit\">Submit</button>",
            "    </form>",
            "",
            "    <%@",
            "        // Attempt to parse the number from the request",
            "        String numberStr = request.getParameter(\"number\");",
            "        if (numberStr != null) {",
            "            // Intentionally causing an exception if input is not a valid integer",
            "            try {",
            "                int number = Integer.parseInt(numberStr); // Could throw NumberFormatException",
            "                out.println(\"<h3>You entered: \" + number + \"</h3>\");",
            "            } catch (Exception e) {",
            "                // Forward to error page if exception occurs",
            "                throw new RuntimeException(\"Invalid input. Please enter a valid number.\");",
            "            }",
            "        }",
            "    %>",
            "</body>",
            "</html>",
            "",
            "// Error Page (errorPage.jsp)",
            "<%@ page isErrorPage=\"true\" language=\"java\" contentType=\"text/html; charset=ISO-8859-1\" pageEncoding=\"ISO-8859-1\"%>",
            "<!DOCTYPE html>",
            "<html>",
            "<head>",
            "    <title>Error Page</title>",
            "</head>",
            "<body>",
            "    <h2>Error Occurred</h2>",
            "    <p><b>Error Message:</b> <%= exception.getMessage() %></p>",
            "    <p><b>Stack Trace:</b></p>",
            "    <pre>",
            "        <%= exception.toString() %>",
            "    </pre>",
            "    <a href=\"index.jsp\">Go back</a>",
            "</body>",
            "</html>",
            "",
            "// Configuring Exception Handling in web.xml",
            "<?xml version=\"1.0\" encoding=\"UTF-8\"?>",
            "<web-app xmlns=\"http://java.sun.com/xml/ns/javaee\"",
            "         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"",
            "         xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee",
            "             http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\"",
            "         version=\"3.0\">",
            "",
            "    <!-- Error page configuration -->",
            "    <error-page>",
            "        <exception-type>java.lang.RuntimeException</exception-type>",
            "        <location>/errorPage.jsp</location>",
            "    </error-page>",
            "",
            "</web-app>"
        ],
        "description": "JSP Exception Handling Example using a custom error page and configuration in web.xml."
    },
    "jspImplicitObjects": {
        "prefix": "jspimplicitobjects",
        "body": [
            "// index.jsp",
            "<%@ page language=\"java\" contentType=\"text/html; charset=ISO-8859-1\" pageEncoding=\"ISO-8859-1\"%>",
            "<!DOCTYPE html>",
            "<html>",
            "<head>",
            "    <title>JSP Implicit Objects - Request, Session, and Out</title>",
            "</head>",
            "<body>",
            "    <h2>Enter your details</h2>",
            "    <form action=\"greeting.jsp\" method=\"post\">",
            "        <label for=\"username\">Username:</label>",
            "        <input type=\"text\" id=\"username\" name=\"username\" required><br><br>",
            "",
            "        <label for=\"age\">Age:</label>",
            "        <input type=\"number\" id=\"age\" name=\"age\" required><br><br>",
            "",
            "        <button type=\"submit\">Submit</button>",
            "    </form>",
            "</body>",
            "</html>",
            "",
            "// greeting.jsp",
            "<%@ page language=\"java\" contentType=\"text/html; charset=ISO-8859-1\" pageEncoding=\"ISO-8859-1\"%>",
            "<!DOCTYPE html>",
            "<html>",
            "<head>",
            "    <title>Greeting Page</title>",
            "</head>",
            "<body>",
            "    <%@",
            "        // Retrieve data from request",
            "        String username = request.getParameter(\"username\");",
            "        String ageStr = request.getParameter(\"age\");",
            "",
            "        // Set username in session",
            "        session.setAttribute(\"username\", username);",
            "",
            "        // Send greeting using out object",
            "        out.println(\"<h2>Hello, \" + username + \"!</h2>\");",
            "        out.println(\"<p>Age: \" + ageStr + \"</p>\");",
            "    %>",
            "    <h3>Your username has been stored in the session.</h3>",
            "",
            "    <!-- Display session data -->",
            "    <%@",
            "        // Retrieve username from session",
            "        String sessionUsername = (String) session.getAttribute(\"username\");",
            "        out.println(\"<p>Session Username: \" + sessionUsername + \"</p>\");",
            "    %>",
            "</body>",
            "</html>",
            "",
            "// session.jsp (Optional)",
            "<%@ page language=\"java\" contentType=\"text/html; charset=ISO-8859-1\" pageEncoding=\"ISO-8859-1\"%>",
            "<!DOCTYPE html>",
            "<html>",
            "<head>",
            "    <title>Session Data</title>",
            "</head>",
            "<body>",
            "    <h2>Session Information</h2>",
            "    <%@",
            "        // Retrieve username from session",
            "        String usernameFromSession = (String) session.getAttribute(\"username\");",
            "",
            "        if (usernameFromSession != null) {",
            "            out.println(\"<p>Welcome back, \" + usernameFromSession + \"!</p>\");",
            "        } else {",
            "            out.println(\"<p>No session data found.</p>\");",
            "        }",
            "    %>",
            "</body>",
            "</html>"
        ],
        "description": "Example showcasing JSP implicit objects: request, session, and out. Includes index.jsp for user input, greeting.jsp for processing and displaying data, and session.jsp for session data handling."
    },
    "SpringDependencyInjection": {
        "prefix": "springdi",
        "body": [
            "// MessageService.java",
            "public class MessageService {",
            "    public String getMessage() {",
            "        return \"Hello, welcome to Spring DI!\";",
            "    }",
            "}",
            "",
            "// UserService.java",
            "public class UserService {",
            "    private MessageService messageService;",
            "",
            "    // Constructor-based DI",
            "    public UserService(MessageService messageService) {",
            "        this.messageService = messageService;",
            "    }",
            "",
            "    // Setter-based DI",
            "    public void setMessageService(MessageService messageService) {",
            "        this.messageService = messageService;",
            "    }",
            "",
            "    public void printMessage() {",
            "        System.out.println(messageService.getMessage());",
            "    }",
            "}",
            "",
            "// beans.xml",
            "<?xml version=\"1.0\" encoding=\"UTF-8\"?>",
            "<beans xmlns=\"http://www.springframework.org/schema/beans\"",
            "       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"",
            "       xsi:schemaLocation=\"http://www.springframework.org/schema/beans",
            "           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd\">",
            "",
            "    <!-- Bean definition for MessageService -->",
            "    <bean id=\"messageService\" class=\"MessageService\"/>",
            "",
            "    <!-- Bean definition for UserService using Constructor-based DI -->",
            "    <bean id=\"userServiceConstructor\" class=\"UserService\">",
            "        <constructor-arg ref=\"messageService\"/>",
            "    </bean>",
            "",
            "    <!-- Bean definition for UserService using Setter-based DI -->",
            "    <bean id=\"userServiceSetter\" class=\"UserService\">",
            "        <property name=\"messageService\" ref=\"messageService\"/>",
            "    </bean>",
            "</beans>",
            "",
            "// MainApp.java",
            "import org.springframework.context.ApplicationContext;",
            "import org.springframework.context.support.ClassPathXmlApplicationContext;",
            "",
            "public class MainApp {",
            "    public static void main(String[] args) {",
            "        // Load Spring configuration file",
            "        ApplicationContext context = new ClassPathXmlApplicationContext(\"beans.xml\");",
            "",
            "        // Constructor-based DI",
            "        UserService userServiceConstructor = (UserService) context.getBean(\"userServiceConstructor\");",
            "        userServiceConstructor.printMessage(); // Should print the message from MessageService",
            "",
            "        // Setter-based DI",
            "        UserService userServiceSetter = (UserService) context.getBean(\"userServiceSetter\");",
            "        userServiceSetter.printMessage(); // Should print the message from MessageService",
            "    }",
            "}"
        ],
        "description": "Spring Dependency Injection example demonstrating Constructor-based DI and Setter-based DI."
    }
}